<?xml version="1.0" encoding="UTF-8"?>
<!--
 This is a WordPress eXtended RSS file generated by WordPress as an export of your site.
 It contains information about your site's posts, pages, comments, categories, and other content.
 You may use this file to transfer that content from one site to another.
 This file is not intended to serve as a complete backup of your site.

 To import this information into a WordPress site follow these steps:
 1. Log in to that site as an administrator.
 2. Go to Tools: Import in the WordPress admin panel.
 3. Install the "WordPress" importer from the list.
 4. Activate & Run Importer.
 5. Upload this file using the form provided on that page.
 6. You will first be asked to map the authors in this export file to users
    on the site. For each author, you may choose to map to an
    existing user on the site or to create a new user.
 7. WordPress will then import each of the posts, pages, comments, categories, etc.
    contained in this file into your site.
-->
<!-- generator="WordPress.com" created="2016-12-14 09:03"-->
<rss version="2.0" xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:wp="http://wordpress.org/export/1.2/">
  <channel>
<title>Project 404</title>
<link>https://seanhodges.wordpress.com</link>
<description>Nothing to see here...</description>
<pubDate>Wed, 14 Dec 2016 09:03:27 +0000</pubDate>
<language>en</language>
<wp:wxr_version>1.2</wp:wxr_version>
<wp:base_site_url>http://wordpress.com/</wp:base_site_url>
<wp:base_blog_url>https://seanhodges.wordpress.com</wp:base_blog_url>
<wp:author>
  <wp:author_login>seanhodges</wp:author_login>
  <wp:author_email>seanhodges84@gmail.com</wp:author_email>
  <wp:author_display_name><![CDATA[seanhodges]]></wp:author_display_name>
  <wp:author_first_name><![CDATA[]]></wp:author_first_name>
  <wp:author_last_name><![CDATA[]]></wp:author_last_name>
</wp:author>
<wp:category>
  <wp:term_id>61763</wp:term_id>
  <wp:category_nicename>gp2x</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[gp2x]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>610</wp:term_id>
  <wp:category_nicename>linux</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[linux]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>14092</wp:term_id>
  <wp:category_nicename>other-blogs</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Other Blogs]]></wp:cat_name>
</wp:category>
<wp:category>
  <wp:term_id>1</wp:term_id>
  <wp:category_nicename>uncategorized</wp:category_nicename>
  <wp:category_parent/>
  <wp:cat_name><![CDATA[Uncategorized]]></wp:cat_name>
</wp:category>
<generator>http://wordpress.com/</generator>
<image>
		<url>https://s2.wp.com/i/buttonw-com.png</url>
		<title>Project 404</title>
		<link>https://seanhodges.wordpress.com</link>
	</image>
	<item>
  <title>About Sean</title>
  <link>https://seanhodges.wordpress.com/</link>
  <pubDate>Tue, 13 Feb 2007 23:34:37 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false"/>
  <description/>
  <content:encoded><![CDATA[There is stuff to say about Sean, and it will go here.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>2</wp:post_id>
  <wp:post_date>2007-02-13 23:34:37</wp:post_date>
  <wp:post_date_gmt>2007-02-13 23:34:37</wp:post_date_gmt>
  <wp:comment_status>closed</wp:comment_status>
  <wp:ping_status>closed</wp:ping_status>
  <wp:post_name>about</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>page</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[802623]]></wp:meta_value>
  </wp:postmeta>
</item>
<item>
  <title>God, not another one!</title>
  <link>https://seanhodges.wordpress.com/2007/02/27/god-not-another-one/</link>
  <pubDate>Tue, 27 Feb 2007 23:32:23 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false">http://seanhodges.wordpress.com/2007/02/27/god-not-another-one/</guid>
  <description/>
  <content:encoded><![CDATA[Here's my new blog, hopefully I'll start putting some interesting stuff in it soon.

My attempts at installing Xen on Ubuntu have been fruitless so far. Hopefully I will hear from the Ubuntu Xen team soon to clear up the issues I'm having with missing files in the kernel headers, but until then I'll stick with the safer VMWare server. Been taking a look at KVM (a kernel-level virtualisation module that has been signed off recently by Linus), it looks very new and theres not a whole lot of documentation behind it yet, but sounds very promising.

I decided to give SymphonyOS another try today, a bit of a disappointment as far as I'm concerned, I was expecting it to have got much further since the last time I tried it out. Not sure if I'm just not giving it enough of a chance. I'm thinking if I get chance I might attempt to try out a new distro each week and give it a review here, but maybe I'm jumping ahead of myself here ;)

Finally, here are some  screenshots of my new desktop! I've recently changed to a dark theme, hopefully it will help me focus in the later hours ;)

<a href="http://seanhodges.files.wordpress.com/2007/02/seans-new-desktop.png" title="Desktop screenshot 1"><img src="https://seanhodges.files.wordpress.com/2007/02/seans-new-desktop.thumbnail.png" alt="Desktop screenshot 1" /></a>    <a href="http://seanhodges.files.wordpress.com/2007/02/seans-new-desktop-2.png" title="Desktop screenshot 2"><img src="https://seanhodges.files.wordpress.com/2007/02/seans-new-desktop-2.thumbnail.png" alt="Desktop screenshot 2" /></a><a href="http://seanhodges.files.wordpress.com/2007/02/seans-new-desktop-2.png" title="Desktop screenshot 2"></a>   <a href="http://seanhodges.files.wordpress.com/2007/02/seans-new-desktop-3.png" title="Desktop screenshot 3"><img src="https://seanhodges.files.wordpress.com/2007/02/seans-new-desktop-3.thumbnail.png" alt="Desktop screenshot 3" /></a>]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>5</wp:post_id>
  <wp:post_date>2007-02-27 23:32:23</wp:post_date>
  <wp:post_date_gmt>2007-02-27 23:32:23</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>god-not-another-one</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Desktop screenshot 2</title>
  <link>https://seanhodges.wordpress.com/2007/02/27/god-not-another-one/desktop-screenshot-2/</link>
  <pubDate>Tue, 27 Feb 2007 23:16:44 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false">http://seanhodges.files.wordpress.com/2007/02/seans-new-desktop-2.png</guid>
  <description/>
  <content:encoded><![CDATA[Rotating cube effect]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>7</wp:post_id>
  <wp:post_date>2007-02-27 23:16:44</wp:post_date>
  <wp:post_date_gmt>2007-02-27 23:16:44</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>desktop-screenshot-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>5</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://seanhodges.files.wordpress.com/2007/02/seans-new-desktop-2.png</wp:attachment_url>
</item>
<item>
  <title>Desktop screenshot 1</title>
  <link>https://seanhodges.wordpress.com/2007/02/27/god-not-another-one/desktop-screenshot-1-2/</link>
  <pubDate>Tue, 27 Feb 2007 23:17:15 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false">http://seanhodges.files.wordpress.com/2007/02/seans-new-desktop.png</guid>
  <description/>
  <content:encoded><![CDATA[]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>8</wp:post_id>
  <wp:post_date>2007-02-27 23:17:15</wp:post_date>
  <wp:post_date_gmt>2007-02-27 23:17:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>desktop-screenshot-1-2</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>5</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://seanhodges.files.wordpress.com/2007/02/seans-new-desktop.png</wp:attachment_url>
</item>
<item>
  <title>Tips for general use of the command-line</title>
  <link>https://seanhodges.wordpress.com/2007/02/28/tips-for-general-use-of-the-command-line/</link>
  <pubDate>Wed, 28 Feb 2007 21:54:15 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false">http://seanhodges.wordpress.com/2007/02/28/tips-for-general-use-of-the-command-line/</guid>
  <description/>
  <content:encoded><![CDATA[I don't claim to be a veteran command-line user, I still need to crack open the books when I want to write anything but a very basic script. However, like most Linux users, I often need to fire up a terminal to do something - whether it's the desktop that has failed me, or that I just want that bit of extra speed. Here are some tips I've accumulated over my short time in the command-line. They are open to suggestions and opinions, I'm fairly open-minded about the whole thing (a clear indication that I haven't been doing it for long!).

<strong>Never use apt-get, always use aptitude</strong>

Aimed at Debian/Ubuntu users. This is a hard habit to kick, but aptitude is much more user-oriented, the commands are nearly identical to apt-get, and most importantly it resolves dependencies more effectively both during installation and on removal of software. I started forcing myself by creating an alias in my session, sounds unproductive but it definitely helped me to remember which program I should be using.

Add the following line into your ~/.bash_aliases file: "alias apt-get=aptitude".

<strong>Use Vim</strong>

At first glance, Vim (Vi-Improved) looks like the most clunky unproductive text editor ever devised, and to start with it is. However, if you persevere with it, the rewards are huge. The functionality behind Vim rivals most GUI text editors, and if you take time to learn the standard control keys (such as h,j,k,l for moving the cursor), you find it becomes much faster to use. Plus it starts instantly, like Windows Notepad on steroids.

Oh, and Emacs is nice too ;)  Though I feel Vi gets you further in the command-line, and it can be found everywhere.

<strong>Less is More</strong>

Whenever somebody instructs you to read a file using "more", or pipe stdout to "more" for easier reading, replace all occurrences of "more" with "less". Less gives you much more control over page operations, including the ability to scroll back up a page, and search the output for a string. The commands are an identical sub-set to Vim, so well worth learning.<strong>
</strong>

<strong>Get screen</strong>

Not an essential, but extremely useful at times. Screen is a small program that allows you to essentially split a single terminal into a number of virtual ones. At first (apart from a splash-screen) it looks like it hasn't done anything. However, run a program then press "Ctrl-a" followed by "c" and you have a brand new terminal to work on, no need to push the program into the background! Press "Ctrl-a" followed by "n" to cycle between the 2 virtual terminals at will. There is much more to screen, check out the manual. Excellent for when you're running a PuTTY session!

<strong>Learn regex</strong>

If you want to do anything sophisticated with the command-line, chances are you'll sometimes need to use regular expressions. This I agree messes with the head a bit, but mastering regex will allow you to use grep, sed, and countless other programs more effectively. A bit of a hypocritical tip, considering I'm still learning regex properly myself, but still a perfectly valid one in my opinion.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>12</wp:post_id>
  <wp:post_date>2007-02-28 21:54:15</wp:post_date>
  <wp:post_date_gmt>2007-02-28 21:54:15</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>tips-for-general-use-of-the-command-line</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[linux]]></category>
</item>
<item>
  <title>Desktop screenshot 3</title>
  <link>https://seanhodges.wordpress.com/2007/02/27/god-not-another-one/desktop-screenshot-3/</link>
  <pubDate>Tue, 27 Feb 2007 23:21:28 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false">http://seanhodges.files.wordpress.com/2007/02/seans-new-desktop-3.png</guid>
  <description/>
  <content:encoded><![CDATA[Closing a window - fire effect]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>11</wp:post_id>
  <wp:post_date>2007-02-27 23:21:28</wp:post_date>
  <wp:post_date_gmt>2007-02-27 23:21:28</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>desktop-screenshot-3</wp:post_name>
  <wp:status>inherit</wp:status>
  <wp:post_parent>5</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>attachment</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <wp:attachment_url>https://seanhodges.files.wordpress.com/2007/02/seans-new-desktop-3.png</wp:attachment_url>
</item>
<item>
  <title>Minty Ubuntu</title>
  <link>https://seanhodges.wordpress.com/2007/03/04/minty-ubuntu/</link>
  <pubDate>Sun, 04 Mar 2007 20:55:37 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false">http://seanhodges.wordpress.com/2007/03/04/minty-ubuntu/</guid>
  <description/>
  <content:encoded><![CDATA[I recently came across a new Ubuntu-derived distribution called Linux Mint at http://linuxmint.com. It's designed to be fully compatible with Ubuntu (which I guess means you can use the Ubuntu repo's alongside the Mint ones) but focuses on a faster release cycle and providing more bleeding-edge software. It also takes a more liberal stance on the free-software policies enforced in the Ubuntu community, including proprietary software and drivers "if a proprietary component has no suitable open source alternative and is needed to produce an elegant desktop" (see website).

I'm interested to see how this distribution pans out. I feel it's unlikely to cause a storm, such a fast release cycle is impractical for most purposes, while Ubuntu has a strong community base and evolving in a steady but flexible rate, making it a safe yet exciting distribution suitable for most desktop environments. Bearing that in mind, Linux Mint might be very useful for providing to the current void that will eventually be filled with Grumpy Groundhog (https://wiki.ubuntu.com/UbuntuDownUnder/ BOFs/GrumpyGroundhog), as the quick release cycle would make testing of the latest applications easier. It may also provide an indication of the implications in providing proprietary software into Ubuntu, currently a subject of much importance and disagreement in the Ubuntu community.

The minty theme looks neat too, I look forward to trying it out and seeing what it can do ;)

*** Congratulations to the newly-weds Marvin and Stacy! ***]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>13</wp:post_id>
  <wp:post_date>2007-03-04 20:55:37</wp:post_date>
  <wp:post_date_gmt>2007-03-04 20:55:37</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>minty-ubuntu</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[linux]]></category>
</item>
<item>
  <title>Extending Nautilus</title>
  <link>https://seanhodges.wordpress.com/2007/03/09/extending-nautilus/</link>
  <pubDate>Fri, 09 Mar 2007 12:56:12 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false">http://seanhodges.wordpress.com/2007/03/09/extending-nautilus/</guid>
  <description/>
  <content:encoded><![CDATA[I was getting tired of having to switch to command-line every time I was using the Nautilus file manager and wanted to do something that required superuser permissions. It was becoming a real limitation for me, but instead of just switching to another file manager (which usually means less seamless integration with the desktop environment) I looked into how I could extend Nautilus to do what I wanted it to do.

I  came across the site http://g-scripts.sourceforge.net, which provides scripts that Nautilus can offer in it's right-click menu. This is an amazing feature that really hasn't been talked about nearly enough. You can essentially download or make a shell script that performs any actions on the directory that Nautilus has open, or files or directories that you have selected. You can get Nautilus to do anything from mounting an ISO, to changing the file permissions of a batch of files in a directory at once.

The script that helped me was http://g-scripts.sourceforge.net/nautilus-scripts/ Execute/Misc/root-nautilus-here. This script allowed me to right-click inside a directory window,  and select an option I called "Open Root Window", this requested my password, and opened a new Nautilus window in my current directory with superuser privileges. Exactly what I needed.

To add a script to Nautilus, you need to copy the script and paste it into a file inside the /home/[yourname]/.gnome2/nautilus-scripts/ directory. The name you give the file will become the name in the right-click menu, so make it a readable one. You can also put the scripts into sub-directories, which is useful if you end up with a lot of them. Once you have done that, you need to make it executable for your user. This could be done using the Right-click-&gt;Properties-&gt;Permissions in Nautilus, or via the command-line (chmod 700 ~/.gnome2/nautilus-scripts/[scriptname]).

That should  be it! Right-click on a file and you should see your script appear in the "Scripts" sub-menu that appears.

If you decide to make any scripts, look to the G-Scripts site to help you get started. Often you can just tweak the scripts offered by the site to do what you want. Remember the script will be invisible, so use " zenity --info --text="debug text" " commands throughout your script to debug it until everything works properly.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>14</wp:post_id>
  <wp:post_date>2007-03-09 12:56:12</wp:post_date>
  <wp:post_date_gmt>2007-03-09 12:56:12</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>extending-nautilus</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Walk-through: Setting up GP2XSDK in Linux</title>
  <link>https://seanhodges.wordpress.com/2007/03/10/walk-through-setting-up-gp2xsdk-in-linux/</link>
  <pubDate>Sat, 10 Mar 2007 20:54:32 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false">http://seanhodges.wordpress.com/2007/03/10/walk-through-setting-up-gp2xsdk-in-linux/</guid>
  <description/>
  <content:encoded><![CDATA[This walkthrough was tested in a clean install of Ubuntu Fiesty, though there should be no reason for it not to work on most flavours of Linux. The intention is to run you through a no-frills install of the official SDK, configuring the environment to use it, and finally test compiling some demo code. There is plenty of scope for improvement, such as moving the SDK directory out of the filesystem root, but this will get you up and running quickly so you can start experimenting.

Final point: I performed my installation in a virtual machine. This is completely personal preference, but I recommend it as you will be keeping the GP2X development environment separate from your main system, if things go wrong and you want to start afresh, you can just delete the image and create a new one. There are no uninstall scripts for the SDK and it copies files to the root of your filesystem, which some can find messy. Again, this is a preference thing.

Onto the walk-through!

1. Install dependancies for SDK
<blockquote>~$ sudo aptitude install subversion build-essential</blockquote>
2. Ensure /bin/sh symlink points to /bin/bash
<blockquote>The SDK install scripts expect /bin/sh to be pointing to the /bin/bash shell, but Debian-based distro's often point to /bin/dash instead - check this with:</blockquote>
~$ ls -l /bin/sh
<blockquote>If the output looks like "/bin/sh -&gt; /bin/dash" you will need to do the following:</blockquote>
<blockquote>~$ sudo mv /bin/sh /bin/sh-original

~$ sudo ln -s /bin/bash /bin/sh</blockquote>
3. Get the SDK
<blockquote>Download at: http://dev.gp2x.com/sdk/gp2xsdk_linux.tar.gz and extract the archive.</blockquote>
<blockquote>(Contact me if this link is bad)</blockquote>
4. Run the install script
<blockquote>~$ cd gp2xsdk_linux</blockquote>
<blockquote>~$ sudo ./buildgp2xtools.sh</blockquote>
5. Go make a cup of tea, this will take a while...

6. Once complete, revert /bin/sh to original (skip this step if you didn't need to do step (2))
<blockquote>~$ sudo rm /bin/sh

~$ sudo mv /bin/sh-original /bin/sh</blockquote>
7. Copy the SDL libraries into /gp2xsdk
<blockquote>~$ sudo tar --directory=/gp2xsdk/ -zxf gp2x-library.tar.gz</blockquote>
8. Create a user account to develop for GP2X on (you will need to "su gp2xdev" before you start coding for GP2X)
<blockquote>This ensures your normal account still allows you to use the normal GNU toolchain for your system</blockquote>
<blockquote>~$ sudo adduser gp2xdev</blockquote>
<blockquote>I advise you continue to use a secure password for this account, this ensures that any privileges you give it do not compromise the system. Next, we will switch to the GP2X development account, and configure the PATH environment variable to use the SDK toolchain:</blockquote>
<blockquote>~$ su gp2xdev</blockquote>
<blockquote>~$ echo "export PATH=/gp2xsdk/Tools/arm-gp2x-linux/bin:\$PATH" &gt;&gt; ~/.bashrc</blockquote>
9. Exit the account and switch to it again, this will apply the new PATH
<blockquote>~$ exit

~$ su gp2xdev</blockquote>
10. You should now be using the SDK toolchain
<blockquote>Test by typing "g++ --version", The first line should read "g++ (GCC) 3.4.6".</blockquote>
11. Download the demo code from:
<blockquote>http://wiki.gp2x.org/wiki/Source_code_to_a_Demo_Program</blockquote>
12. You will also need an 8 bit bitmap image
<blockquote>Create an bitmap image that is 320x240 pixels in size (this will fill the screen) with a 256 colour index.</blockquote>
<blockquote>Save it under the name "image.bmp".</blockquote>
13. To compile the demo, navigate into the directory containing demo.c and use this command:
<blockquote>~$ gcc demo.c -I/gp2xsdk/include/SDL -L/gp2xsdk/lib -lSDL -o demo.gpe</blockquote>
14. Copy the files onto an SD card
<blockquote>Copy the bitmap image onto the ROOT of your SD card (ensure it is named "image.bmp", as this is what is defined in the example code)</blockquote>
<blockquote>Copy the compiled "demo.gpe" program anywhere on your SD card</blockquote>
<blockquote></blockquote>
15. Fire up your GP2X, navigate the menu to Games-&gt;SD Memory Card, then find and run your "demo" program.
<blockquote>If all goes well you should see the image appear on the screen. Press any button to exit back to the menu.</blockquote>
N.B. If instead the program hangs, you have probably not placed the bitmap image in the right place or named it correctly.

Good luck!]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>15</wp:post_id>
  <wp:post_date>2007-03-10 20:54:32</wp:post_date>
  <wp:post_date_gmt>2007-03-10 20:54:32</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>walk-through-setting-up-gp2xsdk-in-linux</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="gp2x"><![CDATA[gp2x]]></category>
  <wp:comment>
    <wp:comment_id>20</wp:comment_id>
    <wp:comment_author><![CDATA[paris]]></wp:comment_author>
    <wp:comment_author_email>paris@parisgraphics.com</wp:comment_author_email>
    <wp:comment_author_url>http://www.parisgraphics.com</wp:comment_author_url>
    <wp:comment_author_IP>69.120.209.137</wp:comment_author_IP>
    <wp:comment_date>2008-06-25 22:11:24</wp:comment_date>
    <wp:comment_date_gmt>2008-06-25 22:11:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi Sean,

After having to do a new OS install, I needed to set up the gp2x dev environment again and needed a refresher on the steps.

Luckily I found your page again and I think this must be the best tutorial out there!

I think I might make a text file out of it and store it with the source code just in case I ever need it again ;-)

Thanks!
p]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2008-06-25 22:11:24</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>29</wp:comment_id>
    <wp:comment_author><![CDATA[Cgi script installation service]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://www.scriptinstallation.com.nu/wp-blog.php?p=1800</wp:comment_author_url>
    <wp:comment_author_IP>199.188.200.60</wp:comment_author_IP>
    <wp:comment_date>2012-09-20 18:52:17</wp:comment_date>
    <wp:comment_date_gmt>2012-09-20 18:52:17</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] If you dont have the knowledge of installing the scripts you want on your website, we offer fast installation of CGI scripts. Read More... [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1348167138</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";d:1348167138.32643604278564453125;s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:0:"";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-09-20 18:52:17</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Roll your own Debian/Ubuntu package</title>
  <link>https://seanhodges.wordpress.com/?p=16</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false">http://seanhodges.wordpress.com/?p=16</guid>
  <description/>
  <content:encoded><![CDATA[This is not intended to be a full walk-through, there are plenty of more concise howto's and documentation available for this purpose, some of which I have listed at the bottom of this post. If you wish to create packages for distribution, you should definitely read some of these. The purpose of this walk-through is to allow someone who has not created a Debian package before to create one quickly and]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>16</wp:post_id>
  <wp:post_date>0000-00-00 00:00:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
</item>
<item>
  <title>Using update-alternatives with Subversion and Apache</title>
  <link>https://seanhodges.wordpress.com/2007/09/03/using-update-alternatives-with-subversion-and-apache/</link>
  <pubDate>Mon, 03 Sep 2007 18:14:02 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false">http://seanhodges.wordpress.com/2007/09/03/using-update-alternatives-with-subversion-and-apache/</guid>
  <description/>
  <content:encoded><![CDATA[One of the complications I have had with Apache and Subversion is working out the best way of switching between branches and making them visible in Apache. At first, I was checking out a branch, deleting and replacing it in the same location so that Apache could pick up the branch I wanted. This was really slow and could be problematic if some of a directory was not committed for whatever reason.

My original solution to this was to maintain virtual hosts for every branch, using a separate port for each one. However, this meant that I then had to keep an index of which branch was on which port, and updating all of this each time I created/checked out a branch was a big overhead.

I have now found a neat solution using the Debian/Ubuntu program update-alternatives. This program is very easy to configure, and scales well for what I am trying to do. It also allows me to put all branches for a website project on a single port. These instructions assume you already have a working Subversion repository and have a basic understanding of how to use Subversion and Apache in Debian/Ubuntu:

1. Create a Subversion workspace for your  projects, if you do not already have one. NOT "/var/www", we will be using that for something else. Use something like "/home/myself/workspace".

2. Check-out your trunk/branches in this workspace directory, try to keep each project contained in a sub-directory for clarity:

<code>$ mkdir ~/workspace/myproject; cd ~/workspace/myproject
$ svn co /path/to/repo/trunk
$ svn co /path/to/repo/branches/testing
$ svn co /path/to/repo/branches/1.x-release</code>

2.  You should now have a project directory containing the project trunk, and some of your branches:

~
| -workspace
|- myproject
| - trunk
| - testing
| - 1.x-release

3. Install each project branch into update alternatives, using "/var/www" as the target for the alias. Note the numbers at the end, they represent the priority of each entry (how far up the list they are); incrementing them by 10 leaves you space to include entries further up the list more easily:

<code>$ sudo update-alternatives --install /var/www/myproject myproject /home/myself/workspace/myproject/trunk 10
$ sudo update-alternatives --install /var/www/myproject myproject /home/myself/workspace/myproject/testing 20
$ sudo update-alternatives --install /var/www/myproject myproject /home/myself/workspace/myproject/1.x-release 30
$ sudo update-alternatives --config myproject</code>

There are 2 alternatives which provide `myproject'.

Selection    Alternative
-----------------------------------------------
*     1        /home/myself/workspace/myproject/trunk
+    2        /home/myself/workspace/myproject/testing
+    3        /home/myself/workspace/myproject/1.x-release

Press enter to keep the default[*], or type selection number:

--- PRESS ENTER AT THIS POINT FOR NOW ---

4. Hopefully you should be starting to see the advantages of this approach. At any time, you can type "sudo update-alternatives --config myproject" and you will be able to select which project branch will be provided to Apache.

5. Configure Apache to look at /var/www/myproject. That's it.

When you want to add a new branch, you need to check it out as described above, and use the "update-alternatives --install" command to include it in the list.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>17</wp:post_id>
  <wp:post_date>2007-09-03 18:14:02</wp:post_date>
  <wp:post_date_gmt>2007-09-03 18:14:02</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>using-update-alternatives-with-subversion-and-apache</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
</item>
<item>
  <title>Creating an Ubuntu package - quick guide</title>
  <link>https://seanhodges.wordpress.com/?p=18</link>
  <pubDate>Mon, 30 Nov -0001 00:00:00 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false">http://seanhodges.wordpress.com/?p=18</guid>
  <description/>
  <content:encoded><![CDATA[A quick step-through guide to turning some source code into an Ubuntu package. This is not meant to be an alternative to the official packaging documentation (

sudo apt-get install debhelper fakeroot pbuilder

~/.pbuilderrc:

• DISTRIBUTION=gutsy
• COMPONENTS="main restricted universe multiverse"
• PBUILDERSATISFYDEPENDSCMD=/usr/lib/pbuilder/pbuilder-satisfydepends-gdebi

sudo pbuilder create --distribution gutsy --othermirror "deb http://archive.ubuntu.com/ubuntu gutsy universe multiverse"

PREPARING THE CODE TO PACKAGE
----------------------------------------------

Make sure code has a "README" and "COPYING" file at top-level
Copy code into a directory (the package will be built in parent directory)
Remove any files/directories you do not want packaged (such as ".git")
Rename the copied directory to "projectname-1.0.0"

dh_make -e seanhodges@bluebottle.com --createorig

debian/control:
Alter the package info to match your program.
Build-Depends = packages that are required to build the application from scratch. This includes cmake and ALL required -dev packages
				&lt;- LEAVE debhelper!!!
Depends = packages that are required to install and use the application.
				&lt;- LEAVE the existing variables!!!

BUILDING THE PACKAGE
--------------------------------

dpkg-buildpackage -us -uc -S -rfakeroot
sudo pbuilder update
sudo pbuilder build ../*.dsc --buildresult /path/to/output

[[sudo pbuilder build *.dsc --buildresult=/media/data/development/medes-releases/webapps/facebook/]]

... (This will take a while, especially first time) ...

cd ../]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>18</wp:post_id>
  <wp:post_date>0000-00-00 00:00:00</wp:post_date>
  <wp:post_date_gmt>0000-00-00 00:00:00</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name/>
  <wp:status>draft</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
</item>
<item>
  <title>Relocating your existing F-Spot photo store (e.g. ~/Photos to ~/Pictures)</title>
  <link>https://seanhodges.wordpress.com/2008/01/30/relocating-your-existing-f-spot-photo-store-eg-photos-to-pictures/</link>
  <pubDate>Wed, 30 Jan 2008 22:27:41 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false">http://seanhodges.wordpress.com/?p=19</guid>
  <description/>
  <content:encoded><![CDATA[This howto allows you to move your entire photo store to a different location, and instruct F-Spot to use this new path without re-importing photos and risking data loss:

<strong>QUIT F-SPOT FIRST!!!</strong>

1. Move the photo store where you want it to be (if you haven't done so already!)

2. Back-up your F-Spot database

<code>cp ~/.gnome2/f-spot/photos.db ~/.gnome2/f-spot/photos-backup.db</code>

3. Install and start sqlite

<code>sudo apt-get install sqlite3
sqlite3 ~/.gnome2/f-spot/photos.db</code>

5. Perform an update command against the "photos" table. Make sure you set the paths to match your own

<code>update photos set directory_path = '/NEW/PATH' || substr(directory_path,length('/OLD/PATH/'),length(directory_path)) where directory_path like '/OLD/PATH/%';</code>

Example:

<code>update photos set directory_path = '/home/sean/Pictures/photos' || substr(directory_path,length('/home/sean/Photos/'),length(directory_path)) where directory_path like '/home/sean/Photos/%';</code>

6. Quit sqlite

<code>.quit</code>

From here on, assuming these steps worked, you should be able to start F-Spot and all your photos are still found!

***
If something went wrong, you can revert to the old database by moving the photos back where they were, and running this command:

<code>mv ~/.gnome2/f-spot/photos-backup.db ~/.gnome2/f-spot/photos.db</code>
***

NOTE: F-Spot appears to rebuild it's thumbnail cache when you start it the first time after doing this, you will notice that all the photos have no images. Leave it for a few minutes and you should find all the photos will eventually flood back into existence.

Thanks to <a href="http://nozell.com/blog/2006/07/02/moving-photos-around-behind-f-spots-back/">http://nozell.com/blog/2006/07/02/moving-photos-around-behind-f-spots-back/</a> and <a href="http://www.itjungle.com/fhg/fhg040506-story02.html">http://www.itjungle.com/fhg/fhg040506-story02.html</a> for pointers.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>19</wp:post_id>
  <wp:post_date>2008-01-30 22:27:41</wp:post_date>
  <wp:post_date_gmt>2008-01-30 22:27:41</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>relocating-your-existing-f-spot-photo-store-eg-photos-to-pictures</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[802623]]></wp:meta_value>
  </wp:postmeta>
  <wp:comment>
    <wp:comment_id>16</wp:comment_id>
    <wp:comment_author><![CDATA[Tom]]></wp:comment_author>
    <wp:comment_author_email>thomas@jpberlin.de</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>77.185.109.154</wp:comment_author_IP>
    <wp:comment_date>2008-06-04 08:44:24</wp:comment_date>
    <wp:comment_date_gmt>2008-06-04 08:44:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[There's an much more easy command:

 update photos set uri = replace(uri,'/home/tom/Fotos/','/home/tom/Bilder/Fotos/');]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2008-06-04 08:44:24</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>26</wp:comment_id>
    <wp:comment_author><![CDATA[Timo]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url/>
    <wp:comment_author_IP>91.47.229.46</wp:comment_author_IP>
    <wp:comment_date>2010-05-13 21:13:33</wp:comment_date>
    <wp:comment_date_gmt>2010-05-13 21:13:33</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[At least since F-Spot 0.6.1.5 the column which contains the path is called "base_uri". And, like Michael mentioned, the two similar updates on "photos" and "photo_versions" did the work.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2010-05-13 21:13:33</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>21</wp:comment_id>
    <wp:comment_author><![CDATA[Berend]]></wp:comment_author>
    <wp:comment_author_email>berend@dotmpe.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>83.81.222.215</wp:comment_author_IP>
    <wp:comment_date>2008-12-08 10:52:16</wp:comment_date>
    <wp:comment_date_gmt>2008-12-08 10:52:16</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Thanks!
This did the trick for me:

 update photos set uri = replace(uri,'/home/berend/dsc','/home/berend/Photos/dsc');]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2008-12-08 10:52:16</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>22</wp:comment_id>
    <wp:comment_author><![CDATA[Craig Loftus]]></wp:comment_author>
    <wp:comment_author_email>craigloftus+seanhodges@googlemail.com</wp:comment_author_email>
    <wp:comment_author_url>http://craigloftus.net/</wp:comment_author_url>
    <wp:comment_author_IP>82.46.16.67</wp:comment_author_IP>
    <wp:comment_date>2008-12-16 21:13:24</wp:comment_date>
    <wp:comment_date_gmt>2008-12-16 21:13:24</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[You method didn't actually work for me... I got this error:

<code>SQL error: no such column: directory_path</code>

I suppose it has now change to be 'uri'.

Using the command suggested in the comments does work, although you have to be careful when copying and pasting from the commands given above. The quotes around the strings are not correct.

To add yet another example of "what worked for me":
<code>update photos set uri = replace(uri,'/home/craig/Photos','/home/craig/media/photos');</code>]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2008-12-16 21:13:24</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>23</wp:comment_id>
    <wp:comment_author><![CDATA[F-spot and the ChangePath extension &laquo; nEws vom ConsEbt team]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url>http://consebt.wordpress.com/2009/01/11/f-spot-and-the-changepath-extension/</wp:comment_author_url>
    <wp:comment_author_IP>72.233.96.150</wp:comment_author_IP>
    <wp:comment_date>2009-01-11 10:55:02</wp:comment_date>
    <wp:comment_date_gmt>2009-01-11 10:55:02</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[[...] seanhodges.wordpress.com: this is probably the manual which gives the best guidance but I will see [...]]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type>pingback</wp:comment_type>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2009-01-11 10:55:02</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>24</wp:comment_id>
    <wp:comment_author><![CDATA[malte]]></wp:comment_author>
    <wp:comment_author_email/>
    <wp:comment_author_url/>
    <wp:comment_author_IP>91.5.80.119</wp:comment_author_IP>
    <wp:comment_date>2009-01-30 22:43:28</wp:comment_date>
    <wp:comment_date_gmt>2009-01-30 22:43:28</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[F-Spot now ships with an extension called ChangePath. As far as I understand it does the same job as what is described above.]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2009-01-30 22:43:28</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>25</wp:comment_id>
    <wp:comment_author><![CDATA[Michael Kjörling]]></wp:comment_author>
    <wp:comment_author_email>michael@kjorling.se</wp:comment_author_email>
    <wp:comment_author_url>http://michael.kjorling.se</wp:comment_author_url>
    <wp:comment_author_IP>82.183.192.131</wp:comment_author_IP>
    <wp:comment_date>2010-01-03 16:24:12</wp:comment_date>
    <wp:comment_date_gmt>2010-01-03 16:24:12</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Using F-Spot 0.4.3.1 (Ubuntu 8.04 LTS package version 0.4.3.1-0ubuntu1), I had to apply a corresponding update to the photo_versions table for all versions of all photos to be affected by the change. Posting here in case anyone else finds themselves in the same situation. (As far as I can tell, ChangePath is not available for this now-near-ancient version.)]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2010-01-03 16:24:12</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>27</wp:comment_id>
    <wp:comment_author><![CDATA[Mike]]></wp:comment_author>
    <wp:comment_author_email>chainsawchihuahua@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>72.64.180.231</wp:comment_author_IP>
    <wp:comment_date>2010-11-09 06:37:42</wp:comment_date>
    <wp:comment_date_gmt>2010-11-09 06:37:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[In agreement with Michael Kjorling and Timo, this update needs to be performed on both the photos and photo_versions tables, and the column is now named base_uri.

When we start to need to do double updates in cases like this, doesn't that usually signify the need for another table and mapping?]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>0</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1289284663</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2010-11-09 06:37:42</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
  <wp:comment>
    <wp:comment_id>28</wp:comment_id>
    <wp:comment_author><![CDATA[Joël]]></wp:comment_author>
    <wp:comment_author_email>joel.bourgault@gmail.com</wp:comment_author_email>
    <wp:comment_author_url/>
    <wp:comment_author_IP>83.152.92.49</wp:comment_author_IP>
    <wp:comment_date>2012-01-31 07:00:42</wp:comment_date>
    <wp:comment_date_gmt>2012-01-31 07:00:42</wp:comment_date_gmt>
    <wp:comment_content><![CDATA[Hi All, I just did the same move on my new computer, as I wanted the pictures to be in another place. I confirm that command has to be executed twice, on tables named photos and photo_versions, on field base_uri. This is for F-Spot version 0.8.2, on Ubuntu 11.10.

I'm coming to the main interest of my post: the time of execution. On my Core2Duo laptop, it seems to have taken less than 2s to complete; now all thumbnails are being created (which takes much more time!).]]></wp:comment_content>
    <wp:comment_approved>1</wp:comment_approved>
    <wp:comment_type/>
    <wp:comment_parent>0</wp:comment_parent>
    <wp:comment_user_id>16677464</wp:comment_user_id>
    <wp:commentmeta>
      <wp:meta_key>jabber_published</wp:meta_key>
      <wp:meta_value>1327993242</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_result</wp:meta_key>
      <wp:meta_value>false</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>akismet_history</wp:meta_key>
      <wp:meta_value>a:4:{s:4:"time";s:15:"1327993243.0955";s:7:"message";s:28:"Akismet cleared this comment";s:5:"event";s:9:"check-ham";s:4:"user";s:10:"velocouche";}</wp:meta_value>
    </wp:commentmeta>
    <wp:commentmeta>
      <wp:meta_key>_elasticsearch_indexed_on</wp:meta_key>
      <wp:meta_value>2012-01-31 07:00:42</wp:meta_value>
    </wp:commentmeta>
  </wp:comment>
</item>
<item>
  <title>Enabling UK Freeview TV in Totem (2.22 or above)</title>
  <link>https://seanhodges.wordpress.com/2008/06/23/enabling-uk-freeview-tv-in-totem-222-or-above/</link>
  <pubDate>Mon, 23 Jun 2008 21:10:25 +0000</pubDate>
  <dc:creator>seanhodges</dc:creator>
  <guid isPermaLink="false">http://seanhodges.wordpress.com/?p=20</guid>
  <description/>
  <content:encoded><![CDATA[This guide assumes that you have a DVB TV tuner that is supported in Linux. Check <a href="http://www.linuxtv.org/wiki/index.php/Supported_Hardware">here</a> to see if your card is supported.

First, visit the <a href="http://www.freeview.co.uk/availability">freeview</a> site to find your nearest transmitter. Type in your postcode and the transmitter is listed in the panel on the right.

You'll need to make sure ubuntu-restricted-extras and dvb-utils are installed:

<code>sudo apt-get install ubuntu-restricted-extras dvb-utils</code>

Finally, type the command below to scan your nearest transmitter for channels. Ensure you replace "uk-Oxford" with "uk-" and the location of the transmitter that the freeview website listed:

<code>scan /usr/share/doc/dvb-utils/examples/scan/dvb-t/uk-Oxford &gt; ~/.gstreamer-0.10/dvb-channels.conf</code>

If this process does not complete, try a different transmitter location.

Start Totem, and you should be able to select Movie -&gt; "Watch TV on 'DVB Adapter 0'" in the top menu to start watching TV. The channels will be listed in your playlist panel.

An alternative to using Totem is a Gnome TV application called "MeTV", which is more geared for TV viewing. The trade-off is that it is less integrated with the Ubuntu desktop, and some people may also find the mouse-only interface frustrating. I recommend you try both and pick the one that suits you.]]></content:encoded>
  <excerpt:encoded><![CDATA[]]></excerpt:encoded>
  <wp:post_id>20</wp:post_id>
  <wp:post_date>2008-06-23 21:10:25</wp:post_date>
  <wp:post_date_gmt>2008-06-23 21:10:25</wp:post_date_gmt>
  <wp:comment_status>open</wp:comment_status>
  <wp:ping_status>open</wp:ping_status>
  <wp:post_name>enabling-uk-freeview-tv-in-totem-222-or-above</wp:post_name>
  <wp:status>publish</wp:status>
  <wp:post_parent>0</wp:post_parent>
  <wp:menu_order>0</wp:menu_order>
  <wp:post_type>post</wp:post_type>
  <wp:post_password/>
  <wp:is_sticky>0</wp:is_sticky>
  <category domain="category" nicename="linux"><![CDATA[linux]]></category>
  <wp:postmeta>
    <wp:meta_key>_edit_last</wp:meta_key>
    <wp:meta_value><![CDATA[802623]]></wp:meta_value>
  </wp:postmeta>
</item>
  </channel>
</rss>
